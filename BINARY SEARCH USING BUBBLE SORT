#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX_SIZE 1000


int binarySearch(int arr[], int left, int right, int key) {
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == key) return mid;
        if (arr[mid] < key) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return -1;
}


void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) 
        for (int j = 0; j < n - 1 - i; j++) 
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
}

int main() {
    int n, key, result;
    clock_t start_time, end_time;
    double time_taken;

    printf("Enter the number of elements (up to %d): ", MAX_SIZE);
    scanf("%d", &n);

    if (n > MAX_SIZE) {
        printf("Exceeds max size %d\n", MAX_SIZE);
        return 1;
    }

    int a[MAX_SIZE];
    srand(time(0));

    for (int i = 0; i < n; i++) a[i] = rand() % 100;

    
    printf("Array before sorting: ");
    for (int i = 0; i < n; i++) printf("%d ", a[i]);
    printf("\n");

    bubbleSort(a, n);

    
    printf("Array after sorting: ");
    for (int i = 0; i < n; i++) printf("%d ", a[i]);
    printf("\n");

    key = a[rand() % n]; 
    printf("Random key to search: %d\n", key);

    start_time = clock();
    result = binarySearch(a, 0, n - 1, key);
    end_time = clock();

    time_taken = (double)(end_time - start_time) / CLOCKS_PER_SEC;

    
    if (result != -1) printf("Element found at index %d.\n", result);
    else printf("Element not found\n");

   
    printf("Time taken: %.6f seconds\n", time_taken);

    return 0;
}

-----------------------------------------------------------------------------------------------------------------------

OUTPUT:-

Enter the number of elements (up to 1000): 21
Array before sorting: 97 3 1 38 78 21 96 96 71 57 88 97 10 64 55 64 40 24 68 41 89 
Array after sorting: 1 3 10 21 24 38 40 41 55 57 64 64 68 71 78 88 89 96 96 97 97 
Random key to search: 88
Element found at index 15.
Time taken: 0.000002 seconds
